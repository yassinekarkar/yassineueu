imports:
  - { resource: services/manager.yml }
#  - { resource: services/logger.yml }

parameters:
    back_host: "%env(BACK_HOST)%"
    front_host: "%env(FRONT_HOST)%"
    
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Manager/'
            - '../src/Kernel.php'
            - '../src/Tests/'
            - '../src/EventListener/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    listener.caller:
        class: App\EventListener\CallerListener
        arguments: ["@doctrine", "@manager.exception", "@security.token_storage"]
        tags:
            - {
                name: kernel.event_listener,
                event: kernel.controller,
                method: onKernelRequest,
                priority: -1,
            }
    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
